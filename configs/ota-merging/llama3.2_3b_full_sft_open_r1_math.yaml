### model
model_name_or_path: meta-llama/Llama-3.2-3B
trust_remote_code: true

### method
stage: sft
do_train: true
finetuning_type: full
deepspeed: examples/deepspeed/ds_z3_config.json # ZeRO-3 recommended for full fine-tuning

### dataset
dataset: Open-R1-Math # Changed dataset
template: llama3
cutoff_len: 2048 # Adjust as needed for the dataset/model
# max_samples: 1000 # Optional: uncomment and set for quicker testing
overwrite_cache: true
preprocessing_num_workers: 16
dataloader_num_workers: 4

### output
output_dir: saves/Llama-3.2-3B/full/sft_open_r1_math # Changed output dir
logging_steps: 10
save_steps: 500 # Adjust based on dataset size and training length
plot_loss: true
overwrite_output_dir: true
save_only_model: false # Set to true to save only the model weights
report_to: wandb # choices: [none, wandb, tensorboard, swanlab, mlflow]

### train
per_device_train_batch_size: 1 # Adjust based on GPU memory
gradient_accumulation_steps: 64 # Adjust effective batch size (batch_size * grad_accum * num_gpus)
learning_rate: 1.0e-5 # Common starting point for full fine-tuning
num_train_epochs: 2.0 # Adjust based on dataset size and convergence
lr_scheduler_type: cosine
warmup_ratio: 0.1
bf16: true # Use bf16 if supported by your hardware (Ampere GPUs or newer)
ddp_timeout: 180000000
resume_from_checkpoint: null

## eval
# eval_dataset: Open-R1-Math # Optional: specify eval set if needed/available
val_size: 0.1 # Optional: set validation split size
per_device_eval_batch_size: 2 # Adjust based on GPU memory
eval_strategy: steps # Evaluate during training
eval_steps: 500 # Frequency of evaluation 